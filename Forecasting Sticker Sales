{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7ca17c33",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-01-15T07:03:53.726222Z",
     "iopub.status.busy": "2025-01-15T07:03:53.725813Z",
     "iopub.status.idle": "2025-01-15T07:03:54.708183Z",
     "shell.execute_reply": "2025-01-15T07:03:54.706737Z"
    },
    "papermill": {
     "duration": 0.99172,
     "end_time": "2025-01-15T07:03:54.710254",
     "exception": false,
     "start_time": "2025-01-15T07:03:53.718534",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/playground-series-s5e1/sample_submission.csv\n",
      "/kaggle/input/playground-series-s5e1/train.csv\n",
      "/kaggle/input/playground-series-s5e1/test.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "4c94d539",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:03:54.723485Z",
     "iopub.status.busy": "2025-01-15T07:03:54.723001Z",
     "iopub.status.idle": "2025-01-15T07:04:07.143421Z",
     "shell.execute_reply": "2025-01-15T07:04:07.142074Z"
    },
    "papermill": {
     "duration": 12.429088,
     "end_time": "2025-01-15T07:04:07.145710",
     "exception": false,
     "start_time": "2025-01-15T07:03:54.716622",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "from sklearn.preprocessing import StandardScaler, LabelEncoder, MinMaxScaler\n",
    "from keras.models import Sequential\n",
    "from tensorflow.keras.layers import Dense, Dropout, Input\n",
    "from keras.optimizers import Adam\n",
    "from keras.regularizers import l2\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "from sklearn.model_selection import train_test_split\n",
    "from tensorflow.keras.callbacks import EarlyStopping\n",
    "import seaborn as sns\n",
    "import joblib\n",
    "from keras.initializers import glorot_uniform\n",
    "from tensorflow.keras.regularizers import l2\n",
    "import random\n",
    "import keras_tuner as kt\n",
    "from sklearn.preprocessing import PolynomialFeatures\n",
    "from sklearn.metrics import r2_score\n",
    "from tensorflow.keras.callbacks import ReduceLROnPlateau"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "574af9c7",
   "metadata": {
    "papermill": {
     "duration": 0.005218,
     "end_time": "2025-01-15T07:04:07.156724",
     "exception": false,
     "start_time": "2025-01-15T07:04:07.151506",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Load Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1aeb81fb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:07.170346Z",
     "iopub.status.busy": "2025-01-15T07:04:07.169637Z",
     "iopub.status.idle": "2025-01-15T07:04:07.652446Z",
     "shell.execute_reply": "2025-01-15T07:04:07.651390Z"
    },
    "papermill": {
     "duration": 0.491686,
     "end_time": "2025-01-15T07:04:07.654699",
     "exception": false,
     "start_time": "2025-01-15T07:04:07.163013",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#load Traning data\n",
    "df_train=pd.read_csv('/kaggle/input/playground-series-s5e1/train.csv')\n",
    "df_test=pd.read_csv('/kaggle/input/playground-series-s5e1/test.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "63381112",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:07.668733Z",
     "iopub.status.busy": "2025-01-15T07:04:07.668372Z",
     "iopub.status.idle": "2025-01-15T07:04:07.691374Z",
     "shell.execute_reply": "2025-01-15T07:04:07.690218Z"
    },
    "papermill": {
     "duration": 0.031503,
     "end_time": "2025-01-15T07:04:07.693409",
     "exception": false,
     "start_time": "2025-01-15T07:04:07.661906",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>country</th>\n",
       "      <th>store</th>\n",
       "      <th>product</th>\n",
       "      <th>num_sold</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>2010-01-01</td>\n",
       "      <td>Canada</td>\n",
       "      <td>Discount Stickers</td>\n",
       "      <td>Holographic Goose</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2010-01-01</td>\n",
       "      <td>Canada</td>\n",
       "      <td>Discount Stickers</td>\n",
       "      <td>Kaggle</td>\n",
       "      <td>973.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2010-01-01</td>\n",
       "      <td>Canada</td>\n",
       "      <td>Discount Stickers</td>\n",
       "      <td>Kaggle Tiers</td>\n",
       "      <td>906.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>2010-01-01</td>\n",
       "      <td>Canada</td>\n",
       "      <td>Discount Stickers</td>\n",
       "      <td>Kerneler</td>\n",
       "      <td>423.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2010-01-01</td>\n",
       "      <td>Canada</td>\n",
       "      <td>Discount Stickers</td>\n",
       "      <td>Kerneler Dark Mode</td>\n",
       "      <td>491.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id        date country              store             product  num_sold\n",
       "0   0  2010-01-01  Canada  Discount Stickers   Holographic Goose       NaN\n",
       "1   1  2010-01-01  Canada  Discount Stickers              Kaggle     973.0\n",
       "2   2  2010-01-01  Canada  Discount Stickers        Kaggle Tiers     906.0\n",
       "3   3  2010-01-01  Canada  Discount Stickers            Kerneler     423.0\n",
       "4   4  2010-01-01  Canada  Discount Stickers  Kerneler Dark Mode     491.0"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0452fccc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:07.706043Z",
     "iopub.status.busy": "2025-01-15T07:04:07.705663Z",
     "iopub.status.idle": "2025-01-15T07:04:07.711438Z",
     "shell.execute_reply": "2025-01-15T07:04:07.710405Z"
    },
    "papermill": {
     "duration": 0.013882,
     "end_time": "2025-01-15T07:04:07.713123",
     "exception": false,
     "start_time": "2025-01-15T07:04:07.699241",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(98550, 5)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "592eadb3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:07.726158Z",
     "iopub.status.busy": "2025-01-15T07:04:07.725736Z",
     "iopub.status.idle": "2025-01-15T07:04:07.732046Z",
     "shell.execute_reply": "2025-01-15T07:04:07.731012Z"
    },
    "papermill": {
     "duration": 0.014912,
     "end_time": "2025-01-15T07:04:07.733929",
     "exception": false,
     "start_time": "2025-01-15T07:04:07.719017",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(230130, 6)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8e033fbb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:07.748177Z",
     "iopub.status.busy": "2025-01-15T07:04:07.747730Z",
     "iopub.status.idle": "2025-01-15T07:04:07.787048Z",
     "shell.execute_reply": "2025-01-15T07:04:07.785747Z"
    },
    "papermill": {
     "duration": 0.048692,
     "end_time": "2025-01-15T07:04:07.789100",
     "exception": false,
     "start_time": "2025-01-15T07:04:07.740408",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>num_sold</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>230130.000000</td>\n",
       "      <td>221259.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>115064.500000</td>\n",
       "      <td>752.527382</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>66432.953062</td>\n",
       "      <td>690.165445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>57532.250000</td>\n",
       "      <td>219.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>115064.500000</td>\n",
       "      <td>605.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>172596.750000</td>\n",
       "      <td>1114.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>230129.000000</td>\n",
       "      <td>5939.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  id       num_sold\n",
       "count  230130.000000  221259.000000\n",
       "mean   115064.500000     752.527382\n",
       "std     66432.953062     690.165445\n",
       "min         0.000000       5.000000\n",
       "25%     57532.250000     219.000000\n",
       "50%    115064.500000     605.000000\n",
       "75%    172596.750000    1114.000000\n",
       "max    230129.000000    5939.000000"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_train.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "09c57235",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:07.804315Z",
     "iopub.status.busy": "2025-01-15T07:04:07.803854Z",
     "iopub.status.idle": "2025-01-15T07:04:07.873239Z",
     "shell.execute_reply": "2025-01-15T07:04:07.871610Z"
    },
    "papermill": {
     "duration": 0.078837,
     "end_time": "2025-01-15T07:04:07.875366",
     "exception": false,
     "start_time": "2025-01-15T07:04:07.796529",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 230130 entries, 0 to 230129\n",
      "Data columns (total 6 columns):\n",
      " #   Column    Non-Null Count   Dtype  \n",
      "---  ------    --------------   -----  \n",
      " 0   id        230130 non-null  int64  \n",
      " 1   date      230130 non-null  object \n",
      " 2   country   230130 non-null  object \n",
      " 3   store     230130 non-null  object \n",
      " 4   product   230130 non-null  object \n",
      " 5   num_sold  221259 non-null  float64\n",
      "dtypes: float64(1), int64(1), object(4)\n",
      "memory usage: 10.5+ MB\n"
     ]
    }
   ],
   "source": [
    "df_train.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e4da47f0",
   "metadata": {
    "papermill": {
     "duration": 0.006534,
     "end_time": "2025-01-15T07:04:07.888324",
     "exception": false,
     "start_time": "2025-01-15T07:04:07.881790",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data cleaning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "f582cbc4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:07.902939Z",
     "iopub.status.busy": "2025-01-15T07:04:07.902531Z",
     "iopub.status.idle": "2025-01-15T07:04:07.954287Z",
     "shell.execute_reply": "2025-01-15T07:04:07.953008Z"
    },
    "papermill": {
     "duration": 0.06106,
     "end_time": "2025-01-15T07:04:07.956296",
     "exception": false,
     "start_time": "2025-01-15T07:04:07.895236",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "num_sold    8871\n",
       "id             0\n",
       "date           0\n",
       "country        0\n",
       "store          0\n",
       "product        0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_train.isnull().sum().sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8e017fe9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:07.970627Z",
     "iopub.status.busy": "2025-01-15T07:04:07.970240Z",
     "iopub.status.idle": "2025-01-15T07:04:07.996636Z",
     "shell.execute_reply": "2025-01-15T07:04:07.995538Z"
    },
    "papermill": {
     "duration": 0.035687,
     "end_time": "2025-01-15T07:04:07.998538",
     "exception": false,
     "start_time": "2025-01-15T07:04:07.962851",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id         0\n",
       "date       0\n",
       "country    0\n",
       "store      0\n",
       "product    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_test.isnull().sum().sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "e8b5c46c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:08.013428Z",
     "iopub.status.busy": "2025-01-15T07:04:08.013067Z",
     "iopub.status.idle": "2025-01-15T07:04:08.240506Z",
     "shell.execute_reply": "2025-01-15T07:04:08.239502Z"
    },
    "papermill": {
     "duration": 0.23696,
     "end_time": "2025-01-15T07:04:08.242255",
     "exception": false,
     "start_time": "2025-01-15T07:04:08.005295",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id          0\n",
       "date        0\n",
       "country     0\n",
       "store       0\n",
       "product     0\n",
       "num_sold    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_train = df_train.bfill()\n",
    "df_test = df_test.bfill()\n",
    "df_train.isnull().sum().sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "ca25ef06",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:08.256817Z",
     "iopub.status.busy": "2025-01-15T07:04:08.256438Z",
     "iopub.status.idle": "2025-01-15T07:04:08.454616Z",
     "shell.execute_reply": "2025-01-15T07:04:08.453223Z"
    },
    "papermill": {
     "duration": 0.207915,
     "end_time": "2025-01-15T07:04:08.456771",
     "exception": false,
     "start_time": "2025-01-15T07:04:08.248856",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>country</th>\n",
       "      <th>store</th>\n",
       "      <th>product</th>\n",
       "      <th>num_sold</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>2010-01-01</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>973.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2010-01-01</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>973.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2010-01-01</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>906.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>2010-01-01</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>423.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2010-01-01</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>491.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230125</th>\n",
       "      <td>230125</td>\n",
       "      <td>2016-12-31</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>466.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230126</th>\n",
       "      <td>230126</td>\n",
       "      <td>2016-12-31</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2907.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230127</th>\n",
       "      <td>230127</td>\n",
       "      <td>2016-12-31</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2299.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230128</th>\n",
       "      <td>230128</td>\n",
       "      <td>2016-12-31</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1242.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230129</th>\n",
       "      <td>230129</td>\n",
       "      <td>2016-12-31</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1622.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>230130 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id        date  country  store  product  num_sold\n",
       "0            0  2010-01-01        0      0        0     973.0\n",
       "1            1  2010-01-01        0      0        1     973.0\n",
       "2            2  2010-01-01        0      0        2     906.0\n",
       "3            3  2010-01-01        0      0        3     423.0\n",
       "4            4  2010-01-01        0      0        4     491.0\n",
       "...        ...         ...      ...    ...      ...       ...\n",
       "230125  230125  2016-12-31        5      1        0     466.0\n",
       "230126  230126  2016-12-31        5      1        1    2907.0\n",
       "230127  230127  2016-12-31        5      1        2    2299.0\n",
       "230128  230128  2016-12-31        5      1        3    1242.0\n",
       "230129  230129  2016-12-31        5      1        4    1622.0\n",
       "\n",
       "[230130 rows x 6 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Encode categorical features\n",
    "encoder = LabelEncoder()\n",
    "for col in ['country', 'store', 'product']:\n",
    "    df_train[col] = encoder.fit_transform(df_train[col].astype(str))\n",
    "    df_test[col] = encoder.fit_transform(df_test[col].astype(str))\n",
    "df_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ba76a870",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:08.472410Z",
     "iopub.status.busy": "2025-01-15T07:04:08.471993Z",
     "iopub.status.idle": "2025-01-15T07:04:08.496135Z",
     "shell.execute_reply": "2025-01-15T07:04:08.494147Z"
    },
    "papermill": {
     "duration": 0.034617,
     "end_time": "2025-01-15T07:04:08.498478",
     "exception": false,
     "start_time": "2025-01-15T07:04:08.463861",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 230130 entries, 0 to 230129\n",
      "Data columns (total 6 columns):\n",
      " #   Column    Non-Null Count   Dtype  \n",
      "---  ------    --------------   -----  \n",
      " 0   id        230130 non-null  int64  \n",
      " 1   date      230130 non-null  object \n",
      " 2   country   230130 non-null  int64  \n",
      " 3   store     230130 non-null  int64  \n",
      " 4   product   230130 non-null  int64  \n",
      " 5   num_sold  230130 non-null  float64\n",
      "dtypes: float64(1), int64(4), object(1)\n",
      "memory usage: 10.5+ MB\n"
     ]
    }
   ],
   "source": [
    "df_train.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "0315cc81",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:08.515209Z",
     "iopub.status.busy": "2025-01-15T07:04:08.514699Z",
     "iopub.status.idle": "2025-01-15T07:04:08.526255Z",
     "shell.execute_reply": "2025-01-15T07:04:08.525189Z"
    },
    "papermill": {
     "duration": 0.021436,
     "end_time": "2025-01-15T07:04:08.528007",
     "exception": false,
     "start_time": "2025-01-15T07:04:08.506571",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>country</th>\n",
       "      <th>store</th>\n",
       "      <th>product</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>230130</td>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>230131</td>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>230132</td>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>230133</td>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>230134</td>\n",
       "      <td>2017-01-01</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       id        date  country  store  product\n",
       "0  230130  2017-01-01        0      0        0\n",
       "1  230131  2017-01-01        0      0        1\n",
       "2  230132  2017-01-01        0      0        2\n",
       "3  230133  2017-01-01        0      0        3\n",
       "4  230134  2017-01-01        0      0        4"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_test.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca9a3e11",
   "metadata": {
    "papermill": {
     "duration": 0.007216,
     "end_time": "2025-01-15T07:04:08.543065",
     "exception": false,
     "start_time": "2025-01-15T07:04:08.535849",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Prepare training and testing data for modeling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "d9e6689e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:08.558713Z",
     "iopub.status.busy": "2025-01-15T07:04:08.558340Z",
     "iopub.status.idle": "2025-01-15T07:04:08.581219Z",
     "shell.execute_reply": "2025-01-15T07:04:08.580048Z"
    },
    "papermill": {
     "duration": 0.032945,
     "end_time": "2025-01-15T07:04:08.583241",
     "exception": false,
     "start_time": "2025-01-15T07:04:08.550296",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>country</th>\n",
       "      <th>store</th>\n",
       "      <th>product</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230125</th>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230126</th>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230127</th>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230128</th>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>230129</th>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>230130 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        country  store  product\n",
       "0             0      0        0\n",
       "1             0      0        1\n",
       "2             0      0        2\n",
       "3             0      0        3\n",
       "4             0      0        4\n",
       "...         ...    ...      ...\n",
       "230125        5      1        0\n",
       "230126        5      1        1\n",
       "230127        5      1        2\n",
       "230128        5      1        3\n",
       "230129        5      1        4\n",
       "\n",
       "[230130 rows x 3 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Prepare features and target\n",
    "X = df_train.drop(columns=['id', 'date', 'num_sold'])\n",
    "y = df_train['num_sold'].astype(int)\n",
    "\n",
    "X_pred = df_test.drop(columns=['id', 'date'])\n",
    "\n",
    "\n",
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "ac6174b6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:08.600258Z",
     "iopub.status.busy": "2025-01-15T07:04:08.599805Z",
     "iopub.status.idle": "2025-01-15T07:04:08.637486Z",
     "shell.execute_reply": "2025-01-15T07:04:08.636314Z"
    },
    "papermill": {
     "duration": 0.048298,
     "end_time": "2025-01-15T07:04:08.639554",
     "exception": false,
     "start_time": "2025-01-15T07:04:08.591256",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Split data\n",
    "# Initial split into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=42)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "60c4908d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:08.655821Z",
     "iopub.status.busy": "2025-01-15T07:04:08.655480Z",
     "iopub.status.idle": "2025-01-15T07:04:08.664896Z",
     "shell.execute_reply": "2025-01-15T07:04:08.663830Z"
    },
    "papermill": {
     "duration": 0.019836,
     "end_time": "2025-01-15T07:04:08.666940",
     "exception": false,
     "start_time": "2025-01-15T07:04:08.647104",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Ensure all data types are correct\n",
    "X_train = X_train.astype(float)\n",
    "#X_val = X_val.astype(float)\n",
    "X_test = X_test.astype(float)\n",
    "y_train = y_train.astype(float)\n",
    "#y_val = y_val.astype(float)\n",
    "y_test = y_test.astype(float)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "31767bc4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:08.683237Z",
     "iopub.status.busy": "2025-01-15T07:04:08.682804Z",
     "iopub.status.idle": "2025-01-15T07:04:08.688760Z",
     "shell.execute_reply": "2025-01-15T07:04:08.687781Z"
    },
    "papermill": {
     "duration": 0.016114,
     "end_time": "2025-01-15T07:04:08.690575",
     "exception": false,
     "start_time": "2025-01-15T07:04:08.674461",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(207117,)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "38fbd711",
   "metadata": {
    "papermill": {
     "duration": 0.007248,
     "end_time": "2025-01-15T07:04:08.705671",
     "exception": false,
     "start_time": "2025-01-15T07:04:08.698423",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "e5bee6cb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:08.721991Z",
     "iopub.status.busy": "2025-01-15T07:04:08.721594Z",
     "iopub.status.idle": "2025-01-15T07:04:08.848449Z",
     "shell.execute_reply": "2025-01-15T07:04:08.847466Z"
    },
    "papermill": {
     "duration": 0.137208,
     "end_time": "2025-01-15T07:04:08.850340",
     "exception": false,
     "start_time": "2025-01-15T07:04:08.713132",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1mModel: \"sequential\"\u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n",
       "┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n",
       "│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1024</span>)                │           <span style=\"color: #00af00; text-decoration-color: #00af00\">4,096</span> │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)                 │         <span style=\"color: #00af00; text-decoration-color: #00af00\">262,400</span> │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dense_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)                 │          <span style=\"color: #00af00; text-decoration-color: #00af00\">32,896</span> │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dense_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)                   │             <span style=\"color: #00af00; text-decoration-color: #00af00\">129</span> │\n",
       "└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n",
       "</pre>\n"
      ],
      "text/plain": [
       "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n",
       "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n",
       "│ dense (\u001b[38;5;33mDense\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1024\u001b[0m)                │           \u001b[38;5;34m4,096\u001b[0m │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m256\u001b[0m)                 │         \u001b[38;5;34m262,400\u001b[0m │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dense_2 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)                 │          \u001b[38;5;34m32,896\u001b[0m │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dense_3 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)                   │             \u001b[38;5;34m129\u001b[0m │\n",
       "└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">299,521</span> (1.14 MB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m299,521\u001b[0m (1.14 MB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">299,521</span> (1.14 MB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m299,521\u001b[0m (1.14 MB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Define the model\n",
    "model = Sequential()\n",
    "\n",
    "# Add the input layer with specified shape\n",
    "model.add(Input(shape=(X_train.shape[1],)))\n",
    "\n",
    "# Add Dense layers with Xavier initialization and Dropout for regularization\n",
    "model.add(Dense(1024, activation='relu', kernel_initializer=glorot_uniform(), kernel_regularizer=l2(0.1)))\n",
    "#model.add(Dropout(0.5))  \n",
    "model.add(Dense(256, activation='relu', kernel_regularizer=l2(0.1), kernel_initializer=glorot_uniform()))\n",
    "#model.add(Dropout(0.5))  \n",
    "model.add(Dense(128, activation='relu', kernel_regularizer=l2(0.1), kernel_initializer=glorot_uniform()))\n",
    "#model.add(Dropout(0.5))  \n",
    "\n",
    "# Output layer for binary classification\n",
    "model.add(Dense(1, activation='linear', kernel_initializer=glorot_uniform()))\n",
    "\n",
    "# Print model summary\n",
    "model.summary()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "93613205",
   "metadata": {
    "papermill": {
     "duration": 0.008,
     "end_time": "2025-01-15T07:04:08.868005",
     "exception": false,
     "start_time": "2025-01-15T07:04:08.860005",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Train the Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "5bca02fb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:08.886244Z",
     "iopub.status.busy": "2025-01-15T07:04:08.885854Z",
     "iopub.status.idle": "2025-01-15T07:04:08.901417Z",
     "shell.execute_reply": "2025-01-15T07:04:08.900473Z"
    },
    "papermill": {
     "duration": 0.027096,
     "end_time": "2025-01-15T07:04:08.903419",
     "exception": false,
     "start_time": "2025-01-15T07:04:08.876323",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Compile the model\n",
    "model.compile(optimizer = Adam(learning_rate=0.01), loss='mse')\n",
    "\n",
    "reduce_lr = ReduceLROnPlateau(monitor='val_loss', factor=0.5, patience=10)\n",
    "\n",
    "early_stopping = EarlyStopping(monitor='val_loss', patience=100, restore_best_weights=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "df6feafd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T07:04:08.922473Z",
     "iopub.status.busy": "2025-01-15T07:04:08.922086Z",
     "iopub.status.idle": "2025-01-15T08:50:03.347337Z",
     "shell.execute_reply": "2025-01-15T08:50:03.345982Z"
    },
    "papermill": {
     "duration": 6354.437264,
     "end_time": "2025-01-15T08:50:03.349530",
     "exception": false,
     "start_time": "2025-01-15T07:04:08.912266",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 219633.2188 - val_loss: 39403.0977 - learning_rate: 0.0100\n",
      "Epoch 2/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 41274.8203 - val_loss: 37729.7656 - learning_rate: 0.0100\n",
      "Epoch 3/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 38082.6680 - val_loss: 35654.5859 - learning_rate: 0.0100\n",
      "Epoch 4/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 37161.6953 - val_loss: 36142.3984 - learning_rate: 0.0100\n",
      "Epoch 5/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 36742.3789 - val_loss: 35887.6094 - learning_rate: 0.0100\n",
      "Epoch 6/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 35615.8008 - val_loss: 35023.2539 - learning_rate: 0.0100\n",
      "Epoch 7/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 35836.3047 - val_loss: 36876.7422 - learning_rate: 0.0100\n",
      "Epoch 8/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 35433.5898 - val_loss: 36859.3477 - learning_rate: 0.0100\n",
      "Epoch 9/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 35148.6602 - val_loss: 37085.1367 - learning_rate: 0.0100\n",
      "Epoch 10/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 35338.0703 - val_loss: 36261.5820 - learning_rate: 0.0100\n",
      "Epoch 11/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 35019.9141 - val_loss: 37021.3281 - learning_rate: 0.0100\n",
      "Epoch 12/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 35149.4297 - val_loss: 34326.7266 - learning_rate: 0.0100\n",
      "Epoch 13/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 34459.6914 - val_loss: 35565.1836 - learning_rate: 0.0100\n",
      "Epoch 14/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 34934.4922 - val_loss: 34097.1602 - learning_rate: 0.0100\n",
      "Epoch 15/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 34409.2734 - val_loss: 35204.0586 - learning_rate: 0.0100\n",
      "Epoch 16/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 34961.4180 - val_loss: 35019.2969 - learning_rate: 0.0100\n",
      "Epoch 17/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 34566.8555 - val_loss: 34329.0859 - learning_rate: 0.0100\n",
      "Epoch 18/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 34227.7383 - val_loss: 34602.3008 - learning_rate: 0.0100\n",
      "Epoch 19/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 34091.8477 - val_loss: 34945.1289 - learning_rate: 0.0100\n",
      "Epoch 20/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 34821.5508 - val_loss: 34166.7148 - learning_rate: 0.0100\n",
      "Epoch 21/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 34563.9336 - val_loss: 34586.0781 - learning_rate: 0.0100\n",
      "Epoch 22/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 34520.8281 - val_loss: 35416.1016 - learning_rate: 0.0100\n",
      "Epoch 23/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 34412.0977 - val_loss: 34465.9883 - learning_rate: 0.0100\n",
      "Epoch 24/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 34583.0352 - val_loss: 34598.3125 - learning_rate: 0.0100\n",
      "Epoch 25/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33544.6875 - val_loss: 33928.1797 - learning_rate: 0.0050\n",
      "Epoch 26/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 33771.6953 - val_loss: 33821.8477 - learning_rate: 0.0050\n",
      "Epoch 27/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33924.9180 - val_loss: 34323.6172 - learning_rate: 0.0050\n",
      "Epoch 28/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 33958.8164 - val_loss: 34140.2734 - learning_rate: 0.0050\n",
      "Epoch 29/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33894.4922 - val_loss: 34274.8594 - learning_rate: 0.0050\n",
      "Epoch 30/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33723.2344 - val_loss: 33888.4805 - learning_rate: 0.0050\n",
      "Epoch 31/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 33885.2227 - val_loss: 33869.6562 - learning_rate: 0.0050\n",
      "Epoch 32/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 34060.3008 - val_loss: 33878.7148 - learning_rate: 0.0050\n",
      "Epoch 33/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 34327.5391 - val_loss: 33762.0625 - learning_rate: 0.0050\n",
      "Epoch 34/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33568.0938 - val_loss: 34210.9141 - learning_rate: 0.0050\n",
      "Epoch 35/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33727.0508 - val_loss: 33751.3281 - learning_rate: 0.0050\n",
      "Epoch 36/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33771.7031 - val_loss: 33965.0039 - learning_rate: 0.0050\n",
      "Epoch 37/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 33964.7695 - val_loss: 33832.8203 - learning_rate: 0.0050\n",
      "Epoch 38/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 34150.8867 - val_loss: 34091.4922 - learning_rate: 0.0050\n",
      "Epoch 39/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33593.7188 - val_loss: 34540.5508 - learning_rate: 0.0050\n",
      "Epoch 40/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33906.3555 - val_loss: 34111.7891 - learning_rate: 0.0050\n",
      "Epoch 41/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33391.0352 - val_loss: 33860.7344 - learning_rate: 0.0050\n",
      "Epoch 42/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 34259.7500 - val_loss: 33854.7461 - learning_rate: 0.0050\n",
      "Epoch 43/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33463.6719 - val_loss: 34166.4844 - learning_rate: 0.0050\n",
      "Epoch 44/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33517.0430 - val_loss: 34112.4414 - learning_rate: 0.0050\n",
      "Epoch 45/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33642.1719 - val_loss: 34031.5859 - learning_rate: 0.0050\n",
      "Epoch 46/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33690.7656 - val_loss: 33767.1367 - learning_rate: 0.0025\n",
      "Epoch 47/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33262.6562 - val_loss: 33688.1719 - learning_rate: 0.0025\n",
      "Epoch 48/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33944.3633 - val_loss: 33612.6406 - learning_rate: 0.0025\n",
      "Epoch 49/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33634.7305 - val_loss: 33745.3945 - learning_rate: 0.0025\n",
      "Epoch 50/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33350.8828 - val_loss: 33858.0273 - learning_rate: 0.0025\n",
      "Epoch 51/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33282.8203 - val_loss: 33727.8164 - learning_rate: 0.0025\n",
      "Epoch 52/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33856.1602 - val_loss: 33983.8125 - learning_rate: 0.0025\n",
      "Epoch 53/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33651.9414 - val_loss: 33622.9805 - learning_rate: 0.0025\n",
      "Epoch 54/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33286.1445 - val_loss: 33696.3398 - learning_rate: 0.0025\n",
      "Epoch 55/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33492.6953 - val_loss: 33537.8438 - learning_rate: 0.0025\n",
      "Epoch 56/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33178.3984 - val_loss: 33541.1992 - learning_rate: 0.0025\n",
      "Epoch 57/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33673.2109 - val_loss: 33609.8789 - learning_rate: 0.0025\n",
      "Epoch 58/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33597.1719 - val_loss: 33542.6367 - learning_rate: 0.0025\n",
      "Epoch 59/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33018.9141 - val_loss: 33608.0078 - learning_rate: 0.0025\n",
      "Epoch 60/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33593.4336 - val_loss: 33478.7383 - learning_rate: 0.0025\n",
      "Epoch 61/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 32938.0469 - val_loss: 33784.8398 - learning_rate: 0.0025\n",
      "Epoch 62/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m42s\u001b[0m 5ms/step - loss: 33596.8594 - val_loss: 33841.3711 - learning_rate: 0.0025\n",
      "Epoch 63/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33215.6211 - val_loss: 33560.5391 - learning_rate: 0.0025\n",
      "Epoch 64/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33557.8984 - val_loss: 33598.9453 - learning_rate: 0.0025\n",
      "Epoch 65/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33424.1133 - val_loss: 33639.1953 - learning_rate: 0.0025\n",
      "Epoch 66/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 33012.9648 - val_loss: 33906.1836 - learning_rate: 0.0025\n",
      "Epoch 67/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 33923.0156 - val_loss: 33608.1055 - learning_rate: 0.0025\n",
      "Epoch 68/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33610.2344 - val_loss: 33556.6445 - learning_rate: 0.0025\n",
      "Epoch 69/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33384.9883 - val_loss: 33674.7695 - learning_rate: 0.0025\n",
      "Epoch 70/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33937.7695 - val_loss: 33738.3320 - learning_rate: 0.0025\n",
      "Epoch 71/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33179.4492 - val_loss: 33689.6641 - learning_rate: 0.0012\n",
      "Epoch 72/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33181.0977 - val_loss: 33525.1055 - learning_rate: 0.0012\n",
      "Epoch 73/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33615.5664 - val_loss: 33571.4805 - learning_rate: 0.0012\n",
      "Epoch 74/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33292.7188 - val_loss: 33918.6016 - learning_rate: 0.0012\n",
      "Epoch 75/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 6ms/step - loss: 33180.5625 - val_loss: 33696.8945 - learning_rate: 0.0012\n",
      "Epoch 76/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32773.7305 - val_loss: 33877.0195 - learning_rate: 0.0012\n",
      "Epoch 77/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33318.8242 - val_loss: 33588.5391 - learning_rate: 0.0012\n",
      "Epoch 78/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33288.7734 - val_loss: 33465.4102 - learning_rate: 0.0012\n",
      "Epoch 79/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32922.1797 - val_loss: 33718.8984 - learning_rate: 0.0012\n",
      "Epoch 80/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33748.3906 - val_loss: 33567.1055 - learning_rate: 0.0012\n",
      "Epoch 81/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 32811.1562 - val_loss: 33615.7227 - learning_rate: 0.0012\n",
      "Epoch 82/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 33156.9648 - val_loss: 33892.0898 - learning_rate: 0.0012\n",
      "Epoch 83/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 34252.1250 - val_loss: 33498.9414 - learning_rate: 0.0012\n",
      "Epoch 84/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33416.5820 - val_loss: 33758.7305 - learning_rate: 0.0012\n",
      "Epoch 85/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33532.7969 - val_loss: 33705.8984 - learning_rate: 0.0012\n",
      "Epoch 86/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32990.3125 - val_loss: 33515.5898 - learning_rate: 0.0012\n",
      "Epoch 87/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 32907.4492 - val_loss: 33508.6250 - learning_rate: 0.0012\n",
      "Epoch 88/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33199.5469 - val_loss: 33593.6211 - learning_rate: 0.0012\n",
      "Epoch 89/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33098.9023 - val_loss: 33504.3633 - learning_rate: 6.2500e-04\n",
      "Epoch 90/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32968.3477 - val_loss: 33568.6445 - learning_rate: 6.2500e-04\n",
      "Epoch 91/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 32807.5508 - val_loss: 33471.6797 - learning_rate: 6.2500e-04\n",
      "Epoch 92/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33213.5000 - val_loss: 33533.3320 - learning_rate: 6.2500e-04\n",
      "Epoch 93/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33175.8789 - val_loss: 33490.4805 - learning_rate: 6.2500e-04\n",
      "Epoch 94/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33252.1875 - val_loss: 33510.8555 - learning_rate: 6.2500e-04\n",
      "Epoch 95/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33451.0859 - val_loss: 33460.7266 - learning_rate: 6.2500e-04\n",
      "Epoch 96/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32678.3691 - val_loss: 33469.9531 - learning_rate: 6.2500e-04\n",
      "Epoch 97/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33167.3789 - val_loss: 33515.5859 - learning_rate: 6.2500e-04\n",
      "Epoch 98/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33161.6953 - val_loss: 33456.2266 - learning_rate: 6.2500e-04\n",
      "Epoch 99/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33485.6016 - val_loss: 33506.6328 - learning_rate: 6.2500e-04\n",
      "Epoch 100/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33095.0820 - val_loss: 33578.3516 - learning_rate: 6.2500e-04\n",
      "Epoch 101/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33063.7031 - val_loss: 33584.5312 - learning_rate: 6.2500e-04\n",
      "Epoch 102/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33582.5742 - val_loss: 33486.6250 - learning_rate: 6.2500e-04\n",
      "Epoch 103/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33411.4727 - val_loss: 33508.7891 - learning_rate: 6.2500e-04\n",
      "Epoch 104/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 32751.5156 - val_loss: 33481.1836 - learning_rate: 6.2500e-04\n",
      "Epoch 105/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32662.9355 - val_loss: 33499.4648 - learning_rate: 6.2500e-04\n",
      "Epoch 106/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32783.9453 - val_loss: 33470.0117 - learning_rate: 6.2500e-04\n",
      "Epoch 107/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33338.1172 - val_loss: 33551.6367 - learning_rate: 6.2500e-04\n",
      "Epoch 108/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 32903.9062 - val_loss: 33715.9414 - learning_rate: 6.2500e-04\n",
      "Epoch 109/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 33308.2578 - val_loss: 33441.1016 - learning_rate: 3.1250e-04\n",
      "Epoch 110/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33232.0430 - val_loss: 33448.9102 - learning_rate: 3.1250e-04\n",
      "Epoch 111/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33287.5625 - val_loss: 33421.8008 - learning_rate: 3.1250e-04\n",
      "Epoch 112/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33895.2266 - val_loss: 33427.7812 - learning_rate: 3.1250e-04\n",
      "Epoch 113/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33289.4453 - val_loss: 33438.4531 - learning_rate: 3.1250e-04\n",
      "Epoch 114/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32967.2695 - val_loss: 33433.2305 - learning_rate: 3.1250e-04\n",
      "Epoch 115/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33130.7695 - val_loss: 33480.2852 - learning_rate: 3.1250e-04\n",
      "Epoch 116/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33342.1641 - val_loss: 33438.8828 - learning_rate: 3.1250e-04\n",
      "Epoch 117/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32778.9727 - val_loss: 33454.2539 - learning_rate: 3.1250e-04\n",
      "Epoch 118/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33268.7969 - val_loss: 33477.3867 - learning_rate: 3.1250e-04\n",
      "Epoch 119/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33074.6445 - val_loss: 33460.5469 - learning_rate: 3.1250e-04\n",
      "Epoch 120/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33658.2266 - val_loss: 33482.6211 - learning_rate: 3.1250e-04\n",
      "Epoch 121/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33447.2109 - val_loss: 33430.6680 - learning_rate: 3.1250e-04\n",
      "Epoch 122/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32823.6406 - val_loss: 33475.0312 - learning_rate: 1.5625e-04\n",
      "Epoch 123/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 6ms/step - loss: 33130.3008 - val_loss: 33483.5273 - learning_rate: 1.5625e-04\n",
      "Epoch 124/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32936.4023 - val_loss: 33430.1836 - learning_rate: 1.5625e-04\n",
      "Epoch 125/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32701.8711 - val_loss: 33427.1211 - learning_rate: 1.5625e-04\n",
      "Epoch 126/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33455.7500 - val_loss: 33451.2266 - learning_rate: 1.5625e-04\n",
      "Epoch 127/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33057.0859 - val_loss: 33417.3242 - learning_rate: 1.5625e-04\n",
      "Epoch 128/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32841.3906 - val_loss: 33450.1211 - learning_rate: 1.5625e-04\n",
      "Epoch 129/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33246.7461 - val_loss: 33447.0547 - learning_rate: 1.5625e-04\n",
      "Epoch 130/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32583.2070 - val_loss: 33439.3281 - learning_rate: 1.5625e-04\n",
      "Epoch 131/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33589.1406 - val_loss: 33456.7188 - learning_rate: 1.5625e-04\n",
      "Epoch 132/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33292.3438 - val_loss: 33506.7617 - learning_rate: 1.5625e-04\n",
      "Epoch 133/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33491.1094 - val_loss: 33450.3672 - learning_rate: 1.5625e-04\n",
      "Epoch 134/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33155.0586 - val_loss: 33419.3438 - learning_rate: 1.5625e-04\n",
      "Epoch 135/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33314.2656 - val_loss: 33430.3789 - learning_rate: 1.5625e-04\n",
      "Epoch 136/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33456.1016 - val_loss: 33425.3516 - learning_rate: 1.5625e-04\n",
      "Epoch 137/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 6ms/step - loss: 32809.5977 - val_loss: 33435.2188 - learning_rate: 1.5625e-04\n",
      "Epoch 138/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 6ms/step - loss: 33109.1562 - val_loss: 33429.4766 - learning_rate: 7.8125e-05\n",
      "Epoch 139/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m33s\u001b[0m 6ms/step - loss: 33076.6758 - val_loss: 33438.1016 - learning_rate: 7.8125e-05\n",
      "Epoch 140/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 6ms/step - loss: 33348.5625 - val_loss: 33449.9297 - learning_rate: 7.8125e-05\n",
      "Epoch 141/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 6ms/step - loss: 33040.4609 - val_loss: 33447.3281 - learning_rate: 7.8125e-05\n",
      "Epoch 142/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33519.1797 - val_loss: 33421.7031 - learning_rate: 7.8125e-05\n",
      "Epoch 143/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33191.7188 - val_loss: 33473.7148 - learning_rate: 7.8125e-05\n",
      "Epoch 144/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33052.9727 - val_loss: 33447.4922 - learning_rate: 7.8125e-05\n",
      "Epoch 145/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 6ms/step - loss: 33185.4180 - val_loss: 33450.9492 - learning_rate: 7.8125e-05\n",
      "Epoch 146/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33237.1719 - val_loss: 33436.8164 - learning_rate: 7.8125e-05\n",
      "Epoch 147/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33298.0703 - val_loss: 33427.6953 - learning_rate: 7.8125e-05\n",
      "Epoch 148/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 32902.0039 - val_loss: 33425.9727 - learning_rate: 3.9062e-05\n",
      "Epoch 149/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33320.6250 - val_loss: 33424.5273 - learning_rate: 3.9062e-05\n",
      "Epoch 150/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33320.8125 - val_loss: 33422.3789 - learning_rate: 3.9062e-05\n",
      "Epoch 151/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33415.1484 - val_loss: 33438.2422 - learning_rate: 3.9062e-05\n",
      "Epoch 152/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33095.1562 - val_loss: 33437.1055 - learning_rate: 3.9062e-05\n",
      "Epoch 153/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33359.0352 - val_loss: 33425.4609 - learning_rate: 3.9062e-05\n",
      "Epoch 154/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33172.1211 - val_loss: 33433.5234 - learning_rate: 3.9062e-05\n",
      "Epoch 155/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33063.3984 - val_loss: 33426.8750 - learning_rate: 3.9062e-05\n",
      "Epoch 156/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 6ms/step - loss: 33023.6523 - val_loss: 33430.3789 - learning_rate: 3.9062e-05\n",
      "Epoch 157/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33474.4297 - val_loss: 33425.4844 - learning_rate: 3.9062e-05\n",
      "Epoch 158/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 32827.1562 - val_loss: 33425.2344 - learning_rate: 1.9531e-05\n",
      "Epoch 159/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33322.2891 - val_loss: 33423.2148 - learning_rate: 1.9531e-05\n",
      "Epoch 160/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33272.1016 - val_loss: 33422.2109 - learning_rate: 1.9531e-05\n",
      "Epoch 161/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 32617.4844 - val_loss: 33428.2695 - learning_rate: 1.9531e-05\n",
      "Epoch 162/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33133.9453 - val_loss: 33427.8242 - learning_rate: 1.9531e-05\n",
      "Epoch 163/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33516.5742 - val_loss: 33435.0430 - learning_rate: 1.9531e-05\n",
      "Epoch 164/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33100.4766 - val_loss: 33428.6523 - learning_rate: 1.9531e-05\n",
      "Epoch 165/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 6ms/step - loss: 32875.7305 - val_loss: 33430.2812 - learning_rate: 1.9531e-05\n",
      "Epoch 166/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33020.5625 - val_loss: 33432.0273 - learning_rate: 1.9531e-05\n",
      "Epoch 167/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 32839.1133 - val_loss: 33434.2109 - learning_rate: 1.9531e-05\n",
      "Epoch 168/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m33s\u001b[0m 6ms/step - loss: 32943.8477 - val_loss: 33430.8555 - learning_rate: 9.7656e-06\n",
      "Epoch 169/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 6ms/step - loss: 32722.8633 - val_loss: 33429.7578 - learning_rate: 9.7656e-06\n",
      "Epoch 170/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m33s\u001b[0m 6ms/step - loss: 33142.6289 - val_loss: 33427.8086 - learning_rate: 9.7656e-06\n",
      "Epoch 171/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 6ms/step - loss: 33183.2188 - val_loss: 33428.5625 - learning_rate: 9.7656e-06\n",
      "Epoch 172/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m33s\u001b[0m 6ms/step - loss: 33326.9531 - val_loss: 33427.5430 - learning_rate: 9.7656e-06\n",
      "Epoch 173/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33134.1914 - val_loss: 33428.6602 - learning_rate: 9.7656e-06\n",
      "Epoch 174/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 6ms/step - loss: 33324.8711 - val_loss: 33426.7734 - learning_rate: 9.7656e-06\n",
      "Epoch 175/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33542.4219 - val_loss: 33428.1445 - learning_rate: 9.7656e-06\n",
      "Epoch 176/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33353.5625 - val_loss: 33427.3789 - learning_rate: 9.7656e-06\n",
      "Epoch 177/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33121.0625 - val_loss: 33427.2773 - learning_rate: 9.7656e-06\n",
      "Epoch 178/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 6ms/step - loss: 32985.8711 - val_loss: 33426.7461 - learning_rate: 4.8828e-06\n",
      "Epoch 179/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 32924.7266 - val_loss: 33426.5195 - learning_rate: 4.8828e-06\n",
      "Epoch 180/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33525.5625 - val_loss: 33426.6875 - learning_rate: 4.8828e-06\n",
      "Epoch 181/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 6ms/step - loss: 33374.2617 - val_loss: 33427.2148 - learning_rate: 4.8828e-06\n",
      "Epoch 182/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33675.0859 - val_loss: 33426.6289 - learning_rate: 4.8828e-06\n",
      "Epoch 183/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32744.5977 - val_loss: 33427.5000 - learning_rate: 4.8828e-06\n",
      "Epoch 184/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33113.8750 - val_loss: 33427.4102 - learning_rate: 4.8828e-06\n",
      "Epoch 185/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 6ms/step - loss: 32821.9961 - val_loss: 33426.8359 - learning_rate: 4.8828e-06\n",
      "Epoch 186/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m30s\u001b[0m 6ms/step - loss: 33300.7500 - val_loss: 33426.6680 - learning_rate: 4.8828e-06\n",
      "Epoch 187/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33289.9453 - val_loss: 33427.2344 - learning_rate: 4.8828e-06\n",
      "Epoch 188/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33014.6250 - val_loss: 33427.1367 - learning_rate: 2.4414e-06\n",
      "Epoch 189/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 32943.1992 - val_loss: 33426.8867 - learning_rate: 2.4414e-06\n",
      "Epoch 190/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32877.4062 - val_loss: 33426.9609 - learning_rate: 2.4414e-06\n",
      "Epoch 191/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33281.2383 - val_loss: 33427.1641 - learning_rate: 2.4414e-06\n",
      "Epoch 192/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32952.1367 - val_loss: 33427.1836 - learning_rate: 2.4414e-06\n",
      "Epoch 193/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 32660.4414 - val_loss: 33427.4219 - learning_rate: 2.4414e-06\n",
      "Epoch 194/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33286.1172 - val_loss: 33427.3203 - learning_rate: 2.4414e-06\n",
      "Epoch 195/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32652.4922 - val_loss: 33427.4727 - learning_rate: 2.4414e-06\n",
      "Epoch 196/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33102.7266 - val_loss: 33427.2734 - learning_rate: 2.4414e-06\n",
      "Epoch 197/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32729.6289 - val_loss: 33426.8477 - learning_rate: 2.4414e-06\n",
      "Epoch 198/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33122.9961 - val_loss: 33426.8203 - learning_rate: 1.2207e-06\n",
      "Epoch 199/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 32813.2500 - val_loss: 33426.7734 - learning_rate: 1.2207e-06\n",
      "Epoch 200/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33284.0000 - val_loss: 33426.7578 - learning_rate: 1.2207e-06\n",
      "Epoch 201/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33305.3359 - val_loss: 33426.7109 - learning_rate: 1.2207e-06\n",
      "Epoch 202/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32943.3359 - val_loss: 33426.6641 - learning_rate: 1.2207e-06\n",
      "Epoch 203/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32939.6367 - val_loss: 33426.7539 - learning_rate: 1.2207e-06\n",
      "Epoch 204/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33458.9180 - val_loss: 33426.6641 - learning_rate: 1.2207e-06\n",
      "Epoch 205/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33158.6133 - val_loss: 33426.6094 - learning_rate: 1.2207e-06\n",
      "Epoch 206/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33089.8242 - val_loss: 33426.5703 - learning_rate: 1.2207e-06\n",
      "Epoch 207/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 32706.9805 - val_loss: 33426.5234 - learning_rate: 1.2207e-06\n",
      "Epoch 208/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33154.0781 - val_loss: 33426.4688 - learning_rate: 6.1035e-07\n",
      "Epoch 209/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 32989.4609 - val_loss: 33426.4453 - learning_rate: 6.1035e-07\n",
      "Epoch 210/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33282.8828 - val_loss: 33426.4648 - learning_rate: 6.1035e-07\n",
      "Epoch 211/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33204.1641 - val_loss: 33426.4141 - learning_rate: 6.1035e-07\n",
      "Epoch 212/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33415.2500 - val_loss: 33426.4609 - learning_rate: 6.1035e-07\n",
      "Epoch 213/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33567.2656 - val_loss: 33426.5273 - learning_rate: 6.1035e-07\n",
      "Epoch 214/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 32781.5977 - val_loss: 33426.4922 - learning_rate: 6.1035e-07\n",
      "Epoch 215/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 33057.5391 - val_loss: 33426.4766 - learning_rate: 6.1035e-07\n",
      "Epoch 216/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33007.3984 - val_loss: 33426.4609 - learning_rate: 6.1035e-07\n",
      "Epoch 217/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33515.3398 - val_loss: 33426.4570 - learning_rate: 6.1035e-07\n",
      "Epoch 218/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33452.9102 - val_loss: 33426.4648 - learning_rate: 3.0518e-07\n",
      "Epoch 219/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 5ms/step - loss: 33303.5273 - val_loss: 33426.5000 - learning_rate: 3.0518e-07\n",
      "Epoch 220/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33006.1836 - val_loss: 33426.5391 - learning_rate: 3.0518e-07\n",
      "Epoch 221/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m28s\u001b[0m 5ms/step - loss: 32980.7188 - val_loss: 33426.5078 - learning_rate: 3.0518e-07\n",
      "Epoch 222/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33330.4102 - val_loss: 33426.5156 - learning_rate: 3.0518e-07\n",
      "Epoch 223/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 6ms/step - loss: 33320.9141 - val_loss: 33426.5352 - learning_rate: 3.0518e-07\n",
      "Epoch 224/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33475.5312 - val_loss: 33426.5156 - learning_rate: 3.0518e-07\n",
      "Epoch 225/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33443.4961 - val_loss: 33426.5352 - learning_rate: 3.0518e-07\n",
      "Epoch 226/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 32801.0156 - val_loss: 33426.5430 - learning_rate: 3.0518e-07\n",
      "Epoch 227/1000\n",
      "\u001b[1m5178/5178\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 5ms/step - loss: 33563.2109 - val_loss: 33426.5547 - learning_rate: 3.0518e-07\n"
     ]
    }
   ],
   "source": [
    "history = model.fit(X_train, y_train, epochs=1000, verbose=1, validation_split=0.2, callbacks=[reduce_lr, early_stopping])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "ec0d33a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T08:50:16.995946Z",
     "iopub.status.busy": "2025-01-15T08:50:16.995544Z",
     "iopub.status.idle": "2025-01-15T08:50:18.856314Z",
     "shell.execute_reply": "2025-01-15T08:50:18.855082Z"
    },
    "papermill": {
     "duration": 8.638752,
     "end_time": "2025-01-15T08:50:18.857932",
     "exception": false,
     "start_time": "2025-01-15T08:50:10.219180",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m720/720\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step\n",
      "R² Score: 0.9302094959630826\n"
     ]
    }
   ],
   "source": [
    "# Predict on the test set\n",
    "y_pred = model.predict(X_test)\n",
    "\n",
    "# Calculate R² score\n",
    "r2 = r2_score(y_test, y_pred)\n",
    "print(f\"R² Score: {r2}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "734f24ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T08:50:32.347827Z",
     "iopub.status.busy": "2025-01-15T08:50:32.347418Z",
     "iopub.status.idle": "2025-01-15T08:50:32.653251Z",
     "shell.execute_reply": "2025-01-15T08:50:32.652131Z"
    },
    "papermill": {
     "duration": 7.071246,
     "end_time": "2025-01-15T08:50:32.655381",
     "exception": false,
     "start_time": "2025-01-15T08:50:25.584135",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Plot training & validation loss\n",
    "plt.plot(history.history['loss'], label='Train Loss')\n",
    "plt.plot(history.history['val_loss'], label='Validation Loss')\n",
    "plt.title('Model Loss')\n",
    "plt.ylabel('Loss')\n",
    "plt.xlabel('Epoch')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6308126f",
   "metadata": {
    "papermill": {
     "duration": 6.888864,
     "end_time": "2025-01-15T08:50:46.153353",
     "exception": false,
     "start_time": "2025-01-15T08:50:39.264489",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Submission"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "5505165e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T08:50:59.932093Z",
     "iopub.status.busy": "2025-01-15T08:50:59.931668Z",
     "iopub.status.idle": "2025-01-15T08:51:07.995737Z",
     "shell.execute_reply": "2025-01-15T08:51:07.994497Z"
    },
    "papermill": {
     "duration": 15.000539,
     "end_time": "2025-01-15T08:51:07.997676",
     "exception": false,
     "start_time": "2025-01-15T08:50:52.997137",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m3080/3080\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 2ms/step\n",
      "98550 98550\n"
     ]
    }
   ],
   "source": [
    "submission_id = df_test.id\n",
    "y_prediction = model.predict(X_pred)\n",
    "y_prediction = np.round(y_prediction)\n",
    "print(len(submission_id), len(y_prediction))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "b36e4412",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T08:51:21.595411Z",
     "iopub.status.busy": "2025-01-15T08:51:21.595028Z",
     "iopub.status.idle": "2025-01-15T08:51:21.606437Z",
     "shell.execute_reply": "2025-01-15T08:51:21.605422Z"
    },
    "papermill": {
     "duration": 7.008676,
     "end_time": "2025-01-15T08:51:21.608078",
     "exception": false,
     "start_time": "2025-01-15T08:51:14.599402",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>num_sold</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>230130</td>\n",
       "      <td>712.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>230131</td>\n",
       "      <td>712.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>230132</td>\n",
       "      <td>588.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>230133</td>\n",
       "      <td>324.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>230134</td>\n",
       "      <td>381.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       id  num_sold\n",
       "0  230130     712.0\n",
       "1  230131     712.0\n",
       "2  230132     588.0\n",
       "3  230133     324.0\n",
       "4  230134     381.0"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "submission_id = df_test.id\n",
    "output = pd.DataFrame({'id': submission_id,\n",
    "                       'num_sold': y_prediction.squeeze()})\n",
    "\n",
    "output.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "96b0cebc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-15T08:51:35.405284Z",
     "iopub.status.busy": "2025-01-15T08:51:35.404841Z",
     "iopub.status.idle": "2025-01-15T08:51:35.604971Z",
     "shell.execute_reply": "2025-01-15T08:51:35.603726Z"
    },
    "papermill": {
     "duration": 7.175524,
     "end_time": "2025-01-15T08:51:35.606749",
     "exception": false,
     "start_time": "2025-01-15T08:51:28.431225",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>num_sold</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>230130</td>\n",
       "      <td>712.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>230131</td>\n",
       "      <td>712.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>230132</td>\n",
       "      <td>588.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>230133</td>\n",
       "      <td>324.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>230134</td>\n",
       "      <td>381.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       id  num_sold\n",
       "0  230130     712.0\n",
       "1  230131     712.0\n",
       "2  230132     588.0\n",
       "3  230133     324.0\n",
       "4  230134     381.0"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sample_submission_df = pd.read_csv('/kaggle/input/playground-series-s5e1/sample_submission.csv')\n",
    "sample_submission_df['num_sold'] = y_prediction\n",
    "sample_submission_df.to_csv('/kaggle/working/submission.csv', index=False)\n",
    "sample_submission_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c4c0ad6e",
   "metadata": {
    "papermill": {
     "duration": 6.8904,
     "end_time": "2025-01-15T08:51:49.472744",
     "exception": false,
     "start_time": "2025-01-15T08:51:42.582344",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 10652996,
     "sourceId": 85723,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30823,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 6487.444732,
   "end_time": "2025-01-15T08:51:58.233042",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-01-15T07:03:50.788310",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
